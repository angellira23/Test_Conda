# ''' ************ Plotting ******************'''
# ########## Figures for Plotting ##########


f1, (ax1,ax2) = plt.subplots(1,2,figsize=(25,10))

f2, (ax3,ax4) = plt.subplots(1,2,figsize=(25,10))

f3, (ax5,ax6) = plt.subplots(1,2,figsize=(25,10))

f4, (ax7,ax8) = plt.subplots(1,2,figsize=(25,10))

f5, (ax9,ax10) = plt.subplots(1,2,figsize=(25,10))
plt.rcParams.update({'font.size': 14})


labellist = ['Raw Data','Low Pass Filtered Data','Subtracted','Final Fitting','Signal* = Fitted Data','Noise* + Drift*',
            'Drift* vs Time','Drift* vs HCools','Noise* vs Time','Noise* vs Hcools','Noise* + Signal* vs Time',
            'Noise* + Signal* vs Hcools','Signal','Drift Subtraction Data: \n Transversal - Drift ','Signal']

description = ['Data (Blue): Transversal Resistance.\nFitting(Orange): Fitting of Data',
               'Data (Blue):\n Noise + Drift = Raw Data (Transversal Resistance) - Fitted Data from Plot 1',
               'Drift: Drift from Plot 3 vs HCools ']
empty = ['Description']
linePlot = ['Drift: Low pass filter of Plot 2 vs Time']


##########Test Fitting Raw Data ###############
params_rawData = hyperbolic(hCools_list,transversalresistance)
fitted_rawData = hyperbolic_fit(hCools_list,*params_rawData)### Axis of Raw Data Fitted

noiseplusdrift_ = subtract_yaxis(transversalresistance,fitted_rawData) #Noise Plus Drift#
drift_ = butter_lowpass_filter(noiseplusdrift_,cutoff, order=8) # Drift
noise_ = subtract_yaxis(noiseplusdrift_,drift_)# Noise
noiseplussignal = adding_axis(fitted_rawData,noise_) # Noise plus Signal

paramsFinalSignal = hyperbolic(hCools_list,noiseplussignal)
fittedFinalSignal = hyperbolic_fit(hCools_list,*paramsFinalSignal)

#######''' PLOTTING'''####
####### Fitting Raw Data: Plotting ###
doscatterplot(hCools_list,transversalresistance,labellist[0],description[0],ax1)
doscatterplot(hCools_list,fitted_rawData,labellist[4],description[0],ax1)


# ##### Noise plus Drift VS Hcools ###
doscatterplot(hCools_list,noiseplusdrift_,labellist[5],description[1],ax2)

# ###### Drift Vs Time ###
dolineplot(time1,drift_,labellist[6],linePlot[0],ax3)
# ##### Drift vs Hcools ##
doscatterplot(hCools_list,drift_,labellist[7],description[2],ax4)

# #### Noise vs Time ##
dolineplot(time1,noise_,labellist[8],description[0],ax5)
# ### Noise vs Hcools ##
doscatterplot(hCools_list,noise_, labellist[9],description[0],ax6)

# ### Noise plus Signal vs Time ###
dolineplot(time1,noiseplussignal,labellist[10],description[0],ax7)
# ### Noise plus Signal vs Hcools ##
doscatterplot(hCools_list,noiseplussignal,labellist[11],description[0],ax8)

# ## Signal vs Hcools ##
doscatterplot(hCools_list,fittedFinalSignal,labellist[12],description[0],ax8)


# ###'''Only Drift Subtraction'''###
drift_transRes = butter_lowpass_filter(transversalresistance,cutoff,order=8)
drift_subtraction = subtract_yaxis(transversalresistance,drift_transRes)

# ###'''Fitting Only Drift'''###
params_drift_Sub = hyperbolic(hCools_list,drift_subtraction)
fitted_drift_Sub = hyperbolic_fit(hCools_list,*params_drift_Sub)

# # Plot Only Subtraction #
doscatterplot(hCools_list,drift_subtraction,labellist[11],description[0],ax9)
#doscatterplot(hCools_list,fitted_drift_Sub,labellist[12],description[0],ax9)
